"use strict";
function $0a4112753bc1785b95b9b918c76626d8$var$_typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") $0a4112753bc1785b95b9b918c76626d8$var$_typeof = function _typeof(obj1) {
        return typeof obj1;
    };
    else $0a4112753bc1785b95b9b918c76626d8$var$_typeof = function _typeof1(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return $0a4112753bc1785b95b9b918c76626d8$var$_typeof(obj);
}
Object.defineProperty($0a4112753bc1785b95b9b918c76626d8$exports, "__esModule", {
    value: true
});
$0a4112753bc1785b95b9b918c76626d8$exports["default"] = void 0;
import   "0a4112753bc1785b95b9b918c76626d8:micro-api-client";
var $0a4112753bc1785b95b9b918c76626d8$var$_microApiClient = $0a4112753bc1785b95b9b918c76626d8$var$_interopRequireWildcard($0a4112753bc1785b95b9b918c76626d8$import$3bc0547a968b47e);
import   "0a4112753bc1785b95b9b918c76626d8:./admin.js";
var $0a4112753bc1785b95b9b918c76626d8$var$_admin = $0a4112753bc1785b95b9b918c76626d8$var$_interopRequireDefault($0a4112753bc1785b95b9b918c76626d8$import$b73a98cb577fe765);
function $0a4112753bc1785b95b9b918c76626d8$var$_interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        "default": obj
    };
}
function $0a4112753bc1785b95b9b918c76626d8$var$_getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();
    $0a4112753bc1785b95b9b918c76626d8$var$_getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
    };
    return cache;
}
function $0a4112753bc1785b95b9b918c76626d8$var$_interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    if (obj === null || $0a4112753bc1785b95b9b918c76626d8$var$_typeof(obj) !== "object" && typeof obj !== "function") return {
        "default": obj
    };
    var cache = $0a4112753bc1785b95b9b918c76626d8$var$_getRequireWildcardCache();
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj["default"] = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function $0a4112753bc1785b95b9b918c76626d8$var$ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $0a4112753bc1785b95b9b918c76626d8$var$_objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        if (i % 2) $0a4112753bc1785b95b9b918c76626d8$var$ownKeys(Object(source), true).forEach(function(key) {
            $0a4112753bc1785b95b9b918c76626d8$var$_defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $0a4112753bc1785b95b9b918c76626d8$var$ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $0a4112753bc1785b95b9b918c76626d8$var$_defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function $0a4112753bc1785b95b9b918c76626d8$var$_classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function $0a4112753bc1785b95b9b918c76626d8$var$_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function $0a4112753bc1785b95b9b918c76626d8$var$_createClass(Constructor, protoProps, staticProps) {
    if (protoProps) $0a4112753bc1785b95b9b918c76626d8$var$_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) $0a4112753bc1785b95b9b918c76626d8$var$_defineProperties(Constructor, staticProps);
    return Constructor;
}
var $0a4112753bc1785b95b9b918c76626d8$var$ExpiryMargin = 60000;
var $0a4112753bc1785b95b9b918c76626d8$var$storageKey = 'gotrue.user';
var $0a4112753bc1785b95b9b918c76626d8$var$refreshPromises = {
};
var $0a4112753bc1785b95b9b918c76626d8$var$currentUser = null;
var $0a4112753bc1785b95b9b918c76626d8$var$forbiddenUpdateAttributes = {
    api: 1,
    token: 1,
    audience: 1,
    url: 1
};
var $0a4112753bc1785b95b9b918c76626d8$var$forbiddenSaveAttributes = {
    api: 1
};
var $0a4112753bc1785b95b9b918c76626d8$var$isBrowser = function isBrowser() {
    return typeof window !== 'undefined';
};
var $0a4112753bc1785b95b9b918c76626d8$var$User = /*#__PURE__*/ function() {
    function User(api, tokenResponse, audience) {
        $0a4112753bc1785b95b9b918c76626d8$var$_classCallCheck(this, User);
        this.api = api;
        this.url = api.apiURL;
        this.audience = audience;
        this._processTokenResponse(tokenResponse);
        $0a4112753bc1785b95b9b918c76626d8$var$currentUser = this;
    }
    $0a4112753bc1785b95b9b918c76626d8$var$_createClass(User, [
        {
            key: "update",
            value: function update(attributes) {
                var _this = this;
                return this._request('/user', {
                    method: 'PUT',
                    body: JSON.stringify(attributes)
                }).then(function(response) {
                    return _this._saveUserData(response)._refreshSavedSession();
                });
            }
        },
        {
            key: "jwt",
            value: function jwt(forceRefresh) {
                var token = this.tokenDetails();
                if (token === null || token === undefined) return Promise.reject(new Error("Gotrue-js: failed getting jwt access token"));
                var expires_at = token.expires_at, refresh_token = token.refresh_token, access_token = token.access_token;
                if (forceRefresh || expires_at - $0a4112753bc1785b95b9b918c76626d8$var$ExpiryMargin < Date.now()) return this._refreshToken(refresh_token);
                return Promise.resolve(access_token);
            }
        },
        {
            key: "logout",
            value: function logout() {
                return this._request('/logout', {
                    method: 'POST'
                }).then(this.clearSession.bind(this))["catch"](this.clearSession.bind(this));
            }
        },
        {
            key: "_refreshToken",
            value: function _refreshToken(refresh_token) {
                var _this2 = this;
                if ($0a4112753bc1785b95b9b918c76626d8$var$refreshPromises[refresh_token]) return $0a4112753bc1785b95b9b918c76626d8$var$refreshPromises[refresh_token];
                return $0a4112753bc1785b95b9b918c76626d8$var$refreshPromises[refresh_token] = this.api.request('/token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: "grant_type=refresh_token&refresh_token=".concat(refresh_token)
                }).then(function(response) {
                    delete $0a4112753bc1785b95b9b918c76626d8$var$refreshPromises[refresh_token];
                    _this2._processTokenResponse(response);
                    _this2._refreshSavedSession();
                    return _this2.token.access_token;
                })["catch"](function(error) {
                    delete $0a4112753bc1785b95b9b918c76626d8$var$refreshPromises[refresh_token];
                    _this2.clearSession();
                    return Promise.reject(error);
                });
            }
        },
        {
            key: "_request",
            value: function _request(path) {
                var _this3 = this;
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                };
                options.headers = options.headers || {
                };
                var aud = options.audience || this.audience;
                if (aud) options.headers['X-JWT-AUD'] = aud;
                return this.jwt().then(function(token) {
                    return _this3.api.request(path, $0a4112753bc1785b95b9b918c76626d8$var$_objectSpread({
                        headers: Object.assign(options.headers, {
                            Authorization: "Bearer ".concat(token)
                        })
                    }, options))["catch"](function(error) {
                        if (error instanceof $0a4112753bc1785b95b9b918c76626d8$var$_microApiClient.JSONHTTPError && error.json) {
                            if (error.json.msg) error.message = error.json.msg;
                            else if (error.json.error) error.message = "".concat(error.json.error, ": ").concat(error.json.error_description);
                        }
                        return Promise.reject(error);
                    });
                });
            }
        },
        {
            key: "getUserData",
            value: function getUserData() {
                return this._request('/user').then(this._saveUserData.bind(this)).then(this._refreshSavedSession.bind(this));
            }
        },
        {
            key: "_saveUserData",
            value: function _saveUserData(attributes, fromStorage) {
                for(var key in attributes){
                    if (key in User.prototype || key in $0a4112753bc1785b95b9b918c76626d8$var$forbiddenUpdateAttributes) continue;
                    this[key] = attributes[key];
                }
                if (fromStorage) this._fromStorage = true;
                return this;
            }
        },
        {
            key: "_processTokenResponse",
            value: function _processTokenResponse(tokenResponse) {
                this.token = tokenResponse;
                try {
                    var claims = JSON.parse($0a4112753bc1785b95b9b918c76626d8$var$urlBase64Decode(tokenResponse.access_token.split('.')[1]));
                    this.token.expires_at = claims.exp * 1000;
                } catch (error) {
                    console.error(new Error("Gotrue-js: Failed to parse tokenResponse claims: ".concat(error)));
                }
            }
        },
        {
            key: "_refreshSavedSession",
            value: function _refreshSavedSession() {
                // only update saved session if we previously saved something
                if ($0a4112753bc1785b95b9b918c76626d8$var$isBrowser() && localStorage.getItem($0a4112753bc1785b95b9b918c76626d8$var$storageKey)) this._saveSession();
                return this;
            }
        },
        {
            key: "_saveSession",
            value: function _saveSession() {
                $0a4112753bc1785b95b9b918c76626d8$var$isBrowser() && localStorage.setItem($0a4112753bc1785b95b9b918c76626d8$var$storageKey, JSON.stringify(this._details));
                return this;
            }
        },
        {
            key: "tokenDetails",
            value: function tokenDetails() {
                return this.token;
            }
        },
        {
            key: "clearSession",
            value: function clearSession() {
                User.removeSavedSession();
                this.token = null;
                $0a4112753bc1785b95b9b918c76626d8$var$currentUser = null;
            }
        },
        {
            key: "admin",
            get: function get() {
                return new $0a4112753bc1785b95b9b918c76626d8$var$_admin["default"](this);
            }
        },
        {
            key: "_details",
            get: function get() {
                var userCopy = {
                };
                for(var key in this){
                    if (key in User.prototype || key in $0a4112753bc1785b95b9b918c76626d8$var$forbiddenSaveAttributes) continue;
                    userCopy[key] = this[key];
                }
                return userCopy;
            }
        }
    ], [
        {
            key: "removeSavedSession",
            value: function removeSavedSession() {
                $0a4112753bc1785b95b9b918c76626d8$var$isBrowser() && localStorage.removeItem($0a4112753bc1785b95b9b918c76626d8$var$storageKey);
            }
        },
        {
            key: "recoverSession",
            value: function recoverSession(apiInstance) {
                if ($0a4112753bc1785b95b9b918c76626d8$var$currentUser) return $0a4112753bc1785b95b9b918c76626d8$var$currentUser;
                var json = $0a4112753bc1785b95b9b918c76626d8$var$isBrowser() && localStorage.getItem($0a4112753bc1785b95b9b918c76626d8$var$storageKey);
                if (json) try {
                    var data = JSON.parse(json);
                    var url = data.url, token = data.token, audience = data.audience;
                    if (!url || !token) return null;
                    var api = apiInstance || new $0a4112753bc1785b95b9b918c76626d8$var$_microApiClient["default"](url, {
                    });
                    return new User(api, token, audience)._saveUserData(data, true);
                } catch (error) {
                    console.error(new Error("Gotrue-js: Error recovering session: ".concat(error)));
                    return null;
                }
                return null;
            }
        }
    ]);
    return User;
}();
$0a4112753bc1785b95b9b918c76626d8$exports["default"] = $0a4112753bc1785b95b9b918c76626d8$var$User;
function $0a4112753bc1785b95b9b918c76626d8$var$urlBase64Decode(str) {
    // From https://jwt.io/js/jwt.js
    var output = str.replace(/-/g, '+').replace(/_/g, '/');
    switch(output.length % 4){
        case 0:
            break;
        case 2:
            output += '==';
            break;
        case 3:
            output += '=';
            break;
        default:
            throw 'Illegal base64url string!';
    } // polifyll https://github.com/davidchambers/Base64.js
    var result = window.atob(output);
    try {
        return decodeURIComponent(escape(result));
    } catch (error) {
        return result;
    }
}
